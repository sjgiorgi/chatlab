name: Build & Deploy Sphinx Docs

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Required for Pages deploy
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: |
            docs/requirements.txt
            requirements.txt

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            # If you keep doc deps in a dedicated file, otherwise inline pip install is fine:
            if [ -f docs/requirements.txt ]; then pip install -r docs/requirements.txt; fi
            # install your package so autodoc can import it
            if [ -f pyproject.toml ] || [ -f setup.cfg ] || [ -f setup.py ]; then pip install -e .; fi
            # ensure Sphinx + plugins are available
            pip install "Sphinx>=8.2" furo myst-parser sphinx-copybutton sphinx-sitemap

      # OPTIONAL: generate API .rst files from your package (adjust path to your package)
      # - name: Generate API stubs (sphinx-apidoc)
      #   run: |
      #       mkdir -p docs/api
      #       sphinx-apidoc -o docs/api PATH/TO/YOUR_PACKAGE

      - name: Build HTML
        run: sphinx-build -b html docs docs/_build/html

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: docs/_build/html

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
